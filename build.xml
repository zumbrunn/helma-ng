<?xml version="1.0"?>

<project name="Helma" default="usage" basedir=".">

    <target name="usage">
        <echo message=""/>
        <echo message="Helma build targets"/>
        <echo message=""/>
        <echo message=" compile    --> compiles the source code to ./classes"/>
        <echo message=" jar        --> generates the ./lib/helma.jar file"/>
        <echo message=" test       --> run JUnit tests"/>
        <echo message=" apidocs    --> generates the API docs"/>
        <echo message=" rhinodocs  --> generate Javascript API for host classes as JSON file"/>
        <echo message=" package    --> creates Helma distribution"/>
        <echo message=" clean      --> clean up compiled resources"/>
    </target>

    <!-- =================================================================== -->
    <!-- Initializes some variables                                          -->
    <!-- =================================================================== -->
    <target name="init">
        <property name="project" value="helma-ng"/>
        <property name="version" value="0.2"/>

        <property name="home" value="."/>

        <property name="src" value="${home}/src"/>
        <property name="lib" value="${home}/lib"/>
        <property name="classes" value="${home}/classes"/>
        <property name="docs" value="${home}/docs"/>
        <property name="javadocs" value="${home}/docs/api"/>

        <property name="helma.jar" value="${lib}/helma.jar"/>

        <property name="debug" value="on"/>
        <property name="optimize" value="on"/>
        <property name="deprecation" value="on"/>

        <property name="testclasses" value=""/>

        <path id="classpath">
            <fileset dir="lib">
                <include name="**/*.jar"/>
                <exclude name="helma.jar"/>
            </fileset>
            <pathelement location="${classes}"/>
        </path>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source directory                                       -->
    <!-- =================================================================== -->
    <target name="compile" depends="init">
        <mkdir dir="${classes}"/>
        <javac srcdir="${src}"
            target="1.5"
            destdir="${classes}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Runs the JUnit test cases                                           -->
    <!-- =================================================================== -->
    <target name="test" depends="compile">
        <junit haltonfailure="true">
            <classpath refid="classpath"/>
            <formatter type="brief" usefile="false"/>
            <batchtest>
              <fileset dir="${src}">
                <include name="**/*Test*.java"/>
                <exclude name="**/AllTests.java"/>
              </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- =================================================================== -->
    <!-- Creates a jar file in the lib-directory                             -->
    <!-- =================================================================== -->
    <target name="jar" depends="compile">
        <jar jarfile="${helma.jar}"
            basedir="${classes}"
            excludes="**/package.html"/>
        <jar jarfile="run.jar"
            basedir="${classes}"
            includes="**/tools/launcher/**"
            manifest="${src}/org/helma/tools/launcher/manifest-runner.txt"/>
        <jar jarfile="shell.jar"
            basedir="${classes}"
            includes="**/tools/launcher/**"
            manifest="${src}/org/helma/tools/launcher/manifest-shell.txt"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the API documentation                                       -->
    <!-- =================================================================== -->
    <target name="apidocs" depends="init">
        <mkdir dir="${javadocs}"/>
        <javadoc packagenames="org.helma.*"
            destdir="${javadocs}"
            windowtitle="Helma API"
            doctitle="Helma API">
            <fileset dir="${src}" includes="**/*.java" />
            <classpath refid="classpath"/>
       </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the Rhino/Javascript API documentation as JSON file         -->
    <!-- =================================================================== -->
    <target name="rhinodocs" depends="init">
         <javac srcdir="tools"
                destdir="tools"
                target="1.5"
                debug="${debug}"
                deprecation="${deprecation}"
                optimize="${optimize}">
        </javac>
        <javadoc packagenames="org.helma.web,org.helma.template"
                 sourcepath="${src}"
                 doclet="RhinoDoclet"
                 docletpath="tools">
                 <classpath refid="classpath"/>
        </javadoc>
        <echo message="Javascript documentation generated in docs/core/rhinodoc.js"/>
    </target>

    <!-- =================================================================== -->
    <!-- Create zipped files for distribution                                -->
    <!-- =================================================================== -->
    <target name="package" depends="jar,apidocs,test">
        <zip zipfile="../${project}-${version}.zip">
            <zipfileset dir="${home}" prefix="${project}-${version}"
             excludes="classes/**,*.zip,*.o,*.tar,*.tar.gz,**/CVS" />
        </zip>
        <tar tarfile="../${project}-${version}.tar">
            <tarfileset dir="${home}" prefix="${project}-${version}"
             excludes="classes/**,*.zip,*.o,*.tar,*.tar.gz,**/CVS" />
        </tar>
        <gzip src="../${project}-${version}.tar" destfile="../${project}-${version}.tar.gz"/>
        <delete file="../${project}-${version}.tar"/>
    </target>

    <!-- =================================================================== -->
    <!-- Clean up compiled resources                                         -->
    <!-- =================================================================== -->
    <target name="clean" depends="init">
        <delete dir="${classes}"/>
        <delete file="${helma.jar}"/>
        <delete file="run.jar"/>
        <delete file="shell.jar"/>
        <delete dir="${javadocs}"/>
    </target>


</project>
